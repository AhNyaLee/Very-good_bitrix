.close-button {
  border: none;
  background-color: transparent;
  position: absolute;
  right: 20px;
  top: 17px;
  cursor: pointer;
  padding: 0;
  width: 24px;
  height: 24px;
  display: flex;
  align-items: center;
  justify-content: center;
}

.close-button svg {
  flex-shrink: 0;
}

.modal {
  position: fixed;
  z-index: 9999;
  display: flex;
  width: 100%;
  height: 100%;
  transition: opacity 0.3s, visibility 0.3s;
  inset: 0;
  align-items: center;
  justify-content: center;
  background-color: var(--darkblue-06);
  visibility: hidden;
  opacity: 0;
  pointer-events: none;

}

.modal.active {
  pointer-events: initial;
  visibility: visible;
  opacity: 1;
}

.modal .form__grid {
  grid-template-columns: repeat(1, 1fr);
  gap: 24px;
}

.modal .form__grid-item {
  grid-column: initial;
}

.modal .form__input::placeholder {
  color: var(--darkblue);
}

.modal .form__grid-item::after {
  background: var(--darkblue);
}

.modal .form__input,
.modal .form__textarea {
  padding: 15px 0;
  height: 55px;
  color: inherit;
}

.modal .form__footer {
  gap: 24px;
  grid-template-columns: repeat(1, 1fr);
}

.modal__body {
  position: relative;
  width: 700px !important;
  padding: 50px 65px 45px;
  margin: 0 auto;
  background: #fff;
}

.modal__title {
  margin-bottom: 4px;
}

.modal__text {
  margin: 0;
  margin-bottom: 16px;
}

.form__accept {
  position: relative;
  padding: 6px 0;
  cursor: pointer;
  padding-left: calc(16px + 32px);

}

.form__accept::before {
  content: "";
  display: block;
  border-radius: 8px;
  width: 32px;
  height: 32px;
  background: var(--white);
  opacity: 0.2;
  position: absolute;
  top: 0;
  left: 0;
  transition: all 0.3s;
}

.form__accept::after {
  content: "";
  display: block;
  position: absolute;
  background-image: url(../svg/icon-check.svg);
  width: 16px;
  height: 12px;
  background-repeat: no-repeat;
  background-size: contain;
  top: 10px;
  left: 8px;
  opacity: 0;

}

.form__custom-checkbox input:checked+label::before {
  background: var(--green);
  opacity: 1;
}

.form__custom-checkbox input:checked+label::after {
  opacity: 1;
}

.form__custom-checkbox .form__accept:hover::before {
  background: var(--bluviolet);
}
